#Push to main
#zip artifact has passed tests in the production org and code review in the pull request

#WARNING: this workflow will run automatically on pull request/merge approval. Be sure to approve the pull request on the proper release date.
#Deploy artifact to production org

#Previous step: pr-staging-to-main
#Next step: none

# Unique name for this workflow
name: Push to main

#Pull request closed merge=true allows access to the ref branch while push does not
on:
  pull_request:
    types:
      - closed
    branches:
      - "main"

# Jobs to be executed
jobs:
  production-org-test-and-deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      # Install Salesforce CLI
      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install

      # Checkout the code in the pull request
      - name: "Checkout source code"
        uses: actions/checkout@v2

      # TESTING
      - name: "Echo Commit Ids"
        run: |
          echo head ref - ${GITHUB_HEAD_REF}
          echo base ref - ${GITHUB_BASE_REF}

      - name: Get branch name (pull request)
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      # Store secret for dev hub org
      - name: "Populate auth file with PRODUCTION_SFDX_URL secret"
        shell: bash
        run: "echo ${{secrets.PRODUCTION_SFDX_URL}} > ./PRODUCTION_SFDX_URL.txt"

      # Authenticate dev hub
      # Authorizes org using SFDX auth url stored in a file
      - name: "Authenticate Dev Hub"
        run: "sfdx force:auth:sfdxurl:store -f ./PRODUCTION_SFDX_URL.txt -a devhub -d"

      # Remove auth file
      - name: "Remove auth file"
        run: rm -f ./PRODUCTION_SFDX_URL.txt

      # Set config username for CLI Commands
      - name: "Set config username for CLI commands"
        run: sfdx config:set defaultusername=${{secrets.PRODUCTION_USERNAME}} defaultdevhubusername=${{secrets.PRODUCTION_USERNAME}}

      # Create/deploy release artifact to production org

      # Convert source code to metadata
      - name: Convert source code to metadata format
        run: sfdx force:source:convert --rootdir force-app --outputdir source_convert

      # Create release artifact
      - name: Create release artifact
        run: zip -r release-artifact-${{steps.date.outputs.date}}.zip source_convert

      - name: Remove source convert output directory
        run: rm -r source_convert

      # Test and deploy artifact
      - name: Test artifact deployment to production org
        run: sfdx force:mdapi:deploy --zipfile release-artifact-${{steps.date.outputs.date}}.zip --testlevel RunAllTestsInOrg -w 10
