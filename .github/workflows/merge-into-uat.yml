#Push to uat
#Your pull request to merge with uat has passed tests and manual code review

#Deploys source code to uat org on pull request approval
#Opens a pull request to merge the same changes with the staging branch

#Previous step: pr-dev-to-uat
#Next step: pr-uat-to-staging

#IMPORTANT:
#Unit tests are ran during the pull request from dev to uat and the push to uat org processes
#This is done in the event that a dev/feature branch gets stalled on a pull request and a separate pull request gets approved and pushed to UAT, rendering the other branch's tests meaningless.

# Unique name for this workflow
name: Merge Into UAT

#Pull request closed merge=true allows access to the ref branch while push does not
on:
  pull_request:
    types:
      - closed
    branches:
      - "uat"

# Jobs to be executed
jobs:
  uat-org-test-and-deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      # Install Salesforce CLI
      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install

      # Checkout the code in the pull request
      - name: "Checkout source code"
        uses: actions/checkout@v2

      # TESTING
      - name: "Echo Commit Ids"
        run: |
          echo head ref - ${GITHUB_HEAD_REF}
          echo base ref - ${GITHUB_BASE_REF}

      - name: Get branch name (pull request)
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      # Store secret for dev hub org
      - name: "Populate auth file with UAT_SFDX_URL secret"
        shell: bash
        run: "echo ${{secrets.UAT_SFDX_URL}} > ./UAT_SFDX_URL.txt"

      # Authenticate dev hub
      # Authorizes org using SFDX auth url stored in a file
      - name: "Authenticate Dev Hub"
        run: "sfdx force:auth:sfdxurl:store -f ./UAT_SFDX_URL.txt -a devhub -d"

      # Remove auth file
      - name: "Remove auth file"
        run: rm -f ./UAT_SFDX_URL.txt

      # Set config username for CLI Commands
      - name: "Set config username for CLI commands"
        run: sfdx config:set defaultusername=${{secrets.UAT_USERNAME}} defaultdevhubusername=${{secrets.UAT_USERNAME}}

      # Deploy source code to UAT org
      - name: "Deploy source code to uat org"
        run: sfdx force:source:deploy -x ./manifest/package.xml -l RunAllTestsInOrg --verbose

        #Open pull request to merge feature with staging branch
      - name: "Checkout dev pull request code"
        uses: actions/checkout@v2
        with:
          ref: staging

      - name: "Reset dev/feature branch"
        run: |
          git fetch origin ${{ env.BRANCH_NAME }}:${{ env.BRANCH_NAME }}
          git reset --hard ${{ env.BRANCH_NAME }}

      - name: Create pull request to merge with staging
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.REPO_SCOPED_TOKEN }}
          branch: staging-merge-from-dev_branch_${{ env.BRANCH_NAME }}
          title: Merge/deploy request into staging from dev branch - ${{ env.BRANCH_NAME }}
          body: A feature tested in the uat branch has been deployed to the uat org and approved to move up to staging.
